% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/page.R
\name{capture_page}
\alias{capture_page}
\title{Capture Screenshot as Image}
\usage{
capture_page(
  filename,
  ...,
  format = c("png", "jpeg"),
  inputId = NULL,
  button_class = "btn btn-default"
)
}
\arguments{
\item{filename}{Name of the file (without extension) that will be created. If \code{NULL} no file is downloaded client side.}

\item{...}{Arguments passed to HTML button.}

\item{format}{Format of output between: \code{"png"} or \code{"jpeg"}.}

\item{inputId}{An \code{inputId} to retrieve image as base64 in an \code{input} slot server-side.}

\item{button_class}{Class to use for the HTML tag \verb{<button>}}
}
\value{
an HTML tag that can be used in UI or rmarkdown HTML document.
}
\description{
Add a button to take a screenshot of a specified element and download a PNG file.
}
\examples{
library(shiny)
library(capture)

ui <- fluidPage(
  tags$h2("Capture example"),
  capture_page(
    filename = "my-app",
    icon("camera"), "Take screenshot of all page"
  ),
  tags$br(),
  fluidRow(
    column(
      width = 4,
      wellPanel(
        tags$b("Parameters :"),
        
        selectInput(
          inputId = "loi",
          label = "Law:",
          choices = c("normal", "uniform", "exponential")
        )
      )
    ),
    column(
      width = 8,
      tags$b("Results :"),
      plotOutput(outputId = "plot"),
      uiOutput(outputId = "mean"),
      verbatimTextOutput(outputId = "raw")
    )
  )
)

server <- function(input, output, session) {

  distrib_r <- reactive({
    switch(
      input$loi,
      "normal" = rnorm(1000),
      "uniform" = runif(1000),
      "exponential" = rexp(1000)
    )
  })
  
  output$plot <- renderPlot({
    hist(distrib_r())
  })
  
  output$mean <- renderUI({
    tags$p(tags$b("The mean is :"), round(mean(distrib_r()), 2))
  })
  
  output$raw <- renderPrint({
    summary(distrib_r())
  })
}

if (interactive())
  shinyApp(ui, server)
}
