{"version":3,"file":"capture-image.js","mappings":"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","sources":["webpack://capture/./node_modules/file-saver/dist/FileSaver.min.js","webpack://capture/webpack/bootstrap","webpack://capture/webpack/runtime/global","webpack://capture/./node_modules/html-to-image/es/util.js","webpack://capture/./node_modules/html-to-image/es/clone-pseudos.js","webpack://capture/./node_modules/html-to-image/es/mimes.js","webpack://capture/./node_modules/html-to-image/es/dataurl.js","webpack://capture/./node_modules/html-to-image/es/clone-node.js","webpack://capture/./node_modules/html-to-image/es/embed-resources.js","webpack://capture/./node_modules/html-to-image/es/embed-images.js","webpack://capture/./node_modules/html-to-image/es/embed-webfonts.js","webpack://capture/./node_modules/html-to-image/es/index.js","webpack://capture/./node_modules/html-to-image/es/apply-style.js","webpack://capture/./srcjs/modules/utils.js","webpack://capture/./srcjs/exts/image.js"],"sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n//# sourceMappingURL=util.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","export function elOrParentHasClass(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return true;\n  return (\n    element.parentNode && elOrParentHasClass(element.parentNode, classname)\n  );\n}\n\nexport function validateEl(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return element;\n  return validateEl(element.parentNode, classname);\n}\n\n","import * as htmlToImage from \"html-to-image\";\nimport { saveAs } from \"file-saver\";\nimport * as utils from \"../modules/utils\";\n\n(function() {\n  // IMAGE\n  function capureImage(event) {\n    var el = event.target;\n    if (!utils.elOrParentHasClass(el, \"btn-capture-screenshot\")) {\n      return;\n    }\n    el = utils.validateEl(el, \"btn-capture-screenshot\");\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    if (msie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\n      alert(\n        \"Screenshot functionnality is not available with Internet Explorer.\"\n      );\n      return;\n    }\n    el.classList.add(\"disabled\");\n    var toCapture = el.getAttribute(\"data-selector\");\n    var node = document.querySelector(toCapture);\n    var fileName = el.getAttribute(\"data-filename\");\n    var inputId = el.getAttribute(\"data-inputId\");\n    var scale = parseFloat(el.getAttribute(\"data-scale\"));\n    var options = el.getAttribute(\"data-options\");\n    options = JSON.parse(options);\n    if (!isNaN(scale)) {\n      options.height = options.height\n        ? options.height * scale\n        : node.offsetHeight * scale;\n      options.width = options.width\n        ? options.width * scale\n        : node.offsetWidth * scale;\n      if (!options.hasOwnProperty(\"style\")) {\n        options.style = {};\n      }\n      options.style.transform = \"scale(\" + scale + \")\";\n      options.style.transformOrigin = \"top left\";\n      options.style.width = node.offsetWidth + \"px\";\n      options.style.height = node.offsetHeight + \"px\";\n    }\n    htmlToImage\n      .toBlob(node, options)\n      .then(function(blob) {\n        if (fileName !== null) {\n          saveAs(blob, fileName);\n        }\n        if (inputId !== null) {\n          var reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function() {\n            var base64data = reader.result;\n            Shiny.setInputValue(inputId, base64data);\n          };\n        }\n        el.classList.remove(\"disabled\");\n      })\n      .catch(function(error) {\n        console.error(\"Capture: oops, something went wrong!\", error);\n      });\n  }\n  function capureImage_(event) {\n    try {\n      capureImage(event);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  document.addEventListener(\"click\", capureImage_);\n})();\n\n"],"names":["c","a","b","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","console","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","test","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","type","Blob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","globalThis","this","Function","uuid","counter","Math","random","toString","slice","toArray","arrayLike","arr","length","push","px","node","styleProperty","val","ownerDocument","defaultView","getComputedStyle","getPropertyValue","parseFloat","targetNode","options","width","leftBorder","rightBorder","clientWidth","getNodeWidth","height","topBorder","bottomBorder","clientHeight","getNodeHeight","canvasDimensionLimit","createImage","url","Promise","resolve","reject","img","Image","decode","crossOrigin","decoding","src","isInstanceOfElement","instance","nodePrototype","Object","getPrototypeOf","constructor","clonePseudoElement","nativeNode","clonedNode","pseudo","style","content","className","err","styleElement","appendChild","selector","cssText","formatCSSText","map","getPropertyPriority","join","formatCSSProperties","createTextNode","getPseudoElementStyle","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","webp","getMimeType","extension","match","exec","getExtension","toLowerCase","isDataUrl","search","makeDataUrl","mimeType","async","fetchAsDataURL","init","process","res","fetch","Error","blob","reader","cache","resourceToDataURL","resourceUrl","contentType","cacheKey","includeQueryParams","key","getCacheKey","dataURL","cacheBust","Date","getTime","fetchRequestInit","headers","get","split","getContentFromDataUrl","imagePlaceholder","msg","message","cloneNode","isRoot","filter","then","HTMLCanvasElement","canvas","toDataURL","cloneCanvasElement","HTMLVideoElement","video","currentSrc","ctx","getContext","drawImage","poster","cloneVideoElement","HTMLIFrameElement","iframe","_a","contentDocument","_b","cloneIFrameElement","cloneSingleNode","children","tagName","toUpperCase","assignedNodes","childNodes","shadowRoot","reduce","deferred","child","clonedChild","cloneChildren","Element","targetStyle","sourceStyle","transformOrigin","forEach","value","endsWith","reducedFont","floor","substring","getAttribute","setProperty","cloneCSSStyle","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneInputValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","cloneSelectValue","decorate","clone","uses","querySelectorAll","processedDefs","id","exist","querySelector","definition","nodes","values","ns","createElementNS","position","overflow","display","defs","ensureSVGSymbols","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","shouldEmbed","embedResources","baseUrl","filteredCSSText","str","preferredFontFormat","format","filterPreferredFontFormat","urls","raw","quotation","parseURLs","css","resourceURL","baseURL","getContentFromUrl","resolvedURL","protocol","doc","implementation","createHTMLDocument","base","head","resolveUrl","escaped","RegExp","toRegex","embedProp","propName","propValue","cssString","embedImages","embedBackground","isImageElement","HTMLImageElement","SVGImageElement","baseVal","image","loading","srcset","embedImageNode","deferreds","all","embedChildren","cssFetchCache","fetchCSS","text","embedFonts","data","regexUrl","loadFonts","loc","startsWith","parseCSS","source","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","embedWebFonts","fontEmbedCSS","skipFonts","rules","styleSheets","cssRules","ret","sheet","item","index","CSSRule","IMPORT_RULE","importIndex","metadata","rule","insertRule","catch","inline","getCSSRules","FONT_FACE_RULE","getWebFontRules","parseWebFontRules","parentStyleSheet","styleNode","sytleContent","firstChild","insertBefore","toSvg","backgroundColor","manual","keys","applyStyle","xmlns","foreignObject","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","nodeToDataURL","toBlob","context","ratio","pixelRatio","FINAL_PROCESS","env","devicePixelRatio","parseInt","Number","isNaN","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","fillStyle","fillRect","toCanvas","quality","binaryString","atob","len","binaryArray","Uint8Array","charCodeAt","canvasToBlob","elOrParentHasClass","element","classname","classList","contains","parentNode","validateEl","capureImage","event","el","ua","indexOf","alert","add","toCapture","fileName","inputId","scale","JSON","parse","offsetHeight","offsetWidth","hasOwnProperty","transform","base64data","Shiny","setInputValue","remove","addEventListener"],"sourceRoot":""}