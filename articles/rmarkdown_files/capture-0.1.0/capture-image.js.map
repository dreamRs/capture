{"version":3,"file":"capture-image.js","mappings":"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","sources":["webpack://capture/./node_modules/file-saver/dist/FileSaver.min.js","webpack://capture/./node_modules/html-to-image/es/apply-style.js","webpack://capture/./node_modules/html-to-image/es/clone-node.js","webpack://capture/./node_modules/html-to-image/es/clone-pseudos.js","webpack://capture/./node_modules/html-to-image/es/dataurl.js","webpack://capture/./node_modules/html-to-image/es/embed-images.js","webpack://capture/./node_modules/html-to-image/es/embed-resources.js","webpack://capture/./node_modules/html-to-image/es/embed-webfonts.js","webpack://capture/./node_modules/html-to-image/es/index.js","webpack://capture/./node_modules/html-to-image/es/mimes.js","webpack://capture/./node_modules/html-to-image/es/util.js","webpack://capture/./srcjs/modules/utils.js","webpack://capture/webpack/bootstrap","webpack://capture/webpack/runtime/compat get default export","webpack://capture/webpack/runtime/define property getters","webpack://capture/webpack/runtime/global","webpack://capture/webpack/runtime/hasOwnProperty shorthand","webpack://capture/./srcjs/exts/image.js"],"sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n//# sourceMappingURL=util.js.map","export function elOrParentHasClass(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return true;\n  return (\n    element.parentNode && elOrParentHasClass(element.parentNode, classname)\n  );\n}\n\nexport function validateEl(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return element;\n  return validateEl(element.parentNode, classname);\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import * as htmlToImage from \"html-to-image\";\nimport { saveAs } from \"file-saver\";\nimport * as utils from \"../modules/utils\";\n\n(function() {\n  // IMAGE\n  function capureImage(event) {\n    var el = event.target;\n    if (!utils.elOrParentHasClass(el, \"btn-capture-screenshot\")) {\n      return;\n    }\n    el = utils.validateEl(el, \"btn-capture-screenshot\");\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    if (msie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\n      alert(\n        \"Screenshot functionnality is not available with Internet Explorer.\"\n      );\n      return;\n    }\n    el.classList.add(\"disabled\");\n    var toCapture = el.getAttribute(\"data-selector\");\n    var node = document.querySelector(toCapture);\n    var fileName = el.getAttribute(\"data-filename\");\n    var inputId = el.getAttribute(\"data-inputId\");\n    var scale = parseFloat(el.getAttribute(\"data-scale\"));\n    var options = el.getAttribute(\"data-options\");\n    options = JSON.parse(options);\n    if (options.hasOwnProperty(\"filter\")) {\n      options.filter = eval(\"(\" + options.filter + \")\");\n    }\n    if (!isNaN(scale)) {\n      options.height = options.height\n        ? options.height * scale\n        : node.offsetHeight * scale;\n      options.width = options.width\n        ? options.width * scale\n        : node.offsetWidth * scale;\n      if (!options.hasOwnProperty(\"style\")) {\n        options.style = {};\n      }\n      options.style.transform = \"scale(\" + scale + \")\";\n      options.style.transformOrigin = \"top left\";\n      options.style.width = node.offsetWidth + \"px\";\n      options.style.height = node.offsetHeight + \"px\";\n    }\n    htmlToImage\n      .toBlob(node, options)\n      .then(function(blob) {\n        if (fileName !== null) {\n          saveAs(blob, fileName);\n        }\n        if (inputId !== null) {\n          var reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function() {\n            var base64data = reader.result;\n            Shiny.setInputValue(inputId, base64data);\n          };\n        }\n        el.classList.remove(\"disabled\");\n      })\n      .catch(function(error) {\n        console.error(\"Capture: oops, something went wrong!\", error);\n      });\n  }\n  function capureImage_(event) {\n    try {\n      capureImage(event);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  document.addEventListener(\"click\", capureImage_);\n})();\n\n"],"names":["c","a","b","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","console","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","test","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","type","Blob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","applyStyle","node","options","style","backgroundColor","width","height","manual","Object","keys","forEach","key","async","cloneNode","isRoot","filter","Promise","resolve","then","clonedNode","HTMLCanvasElement","canvas","dataURL","toDataURL","cloneCanvasElement","HTMLVideoElement","video","currentSrc","ctx","getContext","clientWidth","clientHeight","drawImage","poster","contentType","cloneVideoElement","HTMLIFrameElement","iframe","_a","contentDocument","_b","cloneIFrameElement","cloneSingleNode","nativeNode","children","tagName","toUpperCase","assignedNodes","childNodes","shadowRoot","length","reduce","deferred","child","clonedChild","appendChild","cloneChildren","Element","targetStyle","sourceStyle","getComputedStyle","cssText","transformOrigin","value","getPropertyValue","endsWith","reducedFont","Math","floor","parseFloat","substring","getAttribute","setProperty","getPropertyPriority","cloneCSSStyle","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneInputValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","cloneSelectValue","decorate","clone","uses","querySelectorAll","processedDefs","id","exist","querySelector","definition","nodes","values","ns","svg","createElementNS","position","overflow","display","defs","ensureSVGSymbols","clonePseudoElement","pseudo","content","className","err","styleElement","selector","formatCSSText","map","join","formatCSSProperties","createTextNode","getPseudoElementStyle","clonePseudoElements","isDataUrl","url","search","makeDataUrl","mimeType","fetchAsDataURL","init","process","res","fetch","Error","blob","reject","reader","cache","resourceToDataURL","resourceUrl","cacheKey","includeQueryParams","getCacheKey","cacheBust","Date","getTime","fetchRequestInit","headers","get","split","getContentFromDataUrl","imagePlaceholder","msg","message","embedProp","propName","propValue","cssString","embedImages","embedBackground","isImageElement","HTMLImageElement","src","SVGImageElement","baseVal","image","decode","loading","srcset","embedImageNode","deferreds","all","embedChildren","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","shouldEmbed","embedResources","baseUrl","filteredCSSText","str","preferredFontFormat","match","format","exec","filterPreferredFontFormat","urls","raw","quotation","push","parseURLs","css","resourceURL","baseURL","getContentFromUrl","resolvedURL","escaped","RegExp","toRegex","embed","cssFetchCache","fetchCSS","text","embedFonts","data","regexUrl","loadFonts","loc","startsWith","parseCSS","source","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","embedWebFonts","fontEmbedCSS","skipFonts","rules","ownerDocument","styleSheets","cssRules","ret","sheet","item","index","CSSRule","IMPORT_RULE","importIndex","metadata","rule","insertRule","catch","toString","inline","getCSSRules","FONT_FACE_RULE","getWebFontRules","parseWebFontRules","parentStyleSheet","getWebFontCSS","styleNode","sytleContent","firstChild","insertBefore","toBlob","toSvg","img","context","ratio","pixelRatio","canvasWidth","canvasHeight","skipAutoScale","fillStyle","fillRect","toCanvas","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","webp","getMimeType","extension","getExtension","toLowerCase","resolveUrl","protocol","doc","implementation","createHTMLDocument","base","head","uuid","counter","random","slice","toArray","arrayLike","arr","px","styleProperty","val","defaultView","getImageSize","targetNode","leftBorder","rightBorder","getNodeWidth","topBorder","bottomBorder","getNodeHeight","getPixelRatio","FINAL_PROCESS","env","devicePixelRatio","parseInt","Number","isNaN","canvasDimensionLimit","checkCanvasDimensions","canvasToBlob","quality","binaryString","atob","undefined","len","binaryArray","Uint8Array","charCodeAt","createImage","Image","crossOrigin","decoding","nodeToDataURL","xmlns","foreignObject","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","isInstanceOfElement","instance","nodePrototype","getPrototypeOf","constructor","elOrParentHasClass","element","classname","classList","contains","parentNode","validateEl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","n","getter","__esModule","o","defineProperty","enumerable","globalThis","this","Function","obj","prop","hasOwnProperty","capureImage","event","el","ua","msie","indexOf","alert","add","toCapture","fileName","inputId","scale","JSON","parse","eval","offsetHeight","offsetWidth","transform","base64data","Shiny","setInputValue","remove","capureImage_","addEventListener"],"sourceRoot":""}