{"version":3,"file":"capture-image.js","mappings":"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","sources":["webpack://capture/./node_modules/file-saver/dist/FileSaver.min.js","webpack://capture/webpack/bootstrap","webpack://capture/webpack/runtime/global","webpack://capture/./node_modules/html-to-image/es/mimes.js","webpack://capture/./node_modules/html-to-image/es/dataurl.js","webpack://capture/./node_modules/html-to-image/es/util.js","webpack://capture/./node_modules/html-to-image/es/clone-pseudos.js","webpack://capture/./node_modules/html-to-image/es/clone-node.js","webpack://capture/./node_modules/html-to-image/es/embed-resources.js","webpack://capture/./node_modules/html-to-image/es/embed-images.js","webpack://capture/./node_modules/html-to-image/es/embed-webfonts.js","webpack://capture/./node_modules/html-to-image/es/index.js","webpack://capture/./node_modules/html-to-image/es/apply-style.js","webpack://capture/./srcjs/modules/utils.js","webpack://capture/./srcjs/exts/image.js"],"sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'sync';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\n//# sourceMappingURL=util.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","import { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nimport { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray } from './util';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneSingleNode(node, options) {\n    if (node instanceof HTMLCanvasElement) {\n        return cloneCanvasElement(node);\n    }\n    if (node instanceof HTMLVideoElement && node.poster) {\n        return cloneVideoElement(node, options);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a;\n    const children = isSlotElement(nativeNode) && nativeNode.assignedNodes\n        ? toArray(nativeNode.assignedNodes())\n        : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n    if (children.length === 0 || nativeNode instanceof HTMLVideoElement) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLTextAreaElement) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (nativeNode instanceof HTMLInputElement) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (nativeNode instanceof HTMLSelectElement) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (clonedNode instanceof Element) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode));\n}\n//# sourceMappingURL=clone-node.js.map","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { embedResources } from './embed-resources';\nimport { toArray } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedBackground(clonedNode, options) {\n    var _a;\n    const background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n    if (background) {\n        const cssString = await embedResources(background, null, options);\n        clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    if (!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) &&\n        !(clonedNode instanceof SVGImageElement &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = clonedNode instanceof HTMLImageElement\n        ? clonedNode.src\n        : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        if (clonedNode instanceof HTMLImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (clonedNode instanceof Element) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err.toString());\n                    }));\n                }\n                console.error('Error inlining remote css file', e.toString());\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e.toString());\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","export function elOrParentHasClass(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return true;\n  return (\n    element.parentNode && elOrParentHasClass(element.parentNode, classname)\n  );\n}\n\nexport function validateEl(element, classname) {\n  if (\n    typeof element.classList !== \"undefined\" &&\n    element.classList.contains(classname)\n  )\n    return element;\n  return validateEl(element.parentNode, classname);\n}\n\n","import * as htmlToImage from \"html-to-image\";\nimport { saveAs } from \"file-saver\";\nimport * as utils from \"../modules/utils\";\n\n(function() {\n  // IMAGE\n  function capureImage(event) {\n    var el = event.target;\n    if (!utils.elOrParentHasClass(el, \"btn-capture-screenshot\")) {\n      return;\n    }\n    el = utils.validateEl(el, \"btn-capture-screenshot\");\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf(\"MSIE \");\n    if (msie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\n      alert(\n        \"Screenshot functionnality is not available with Internet Explorer.\"\n      );\n      return;\n    }\n    el.classList.add(\"disabled\");\n    var toCapture = el.getAttribute(\"data-selector\");\n    var node = document.querySelector(toCapture);\n    var fileName = el.getAttribute(\"data-filename\");\n    var inputId = el.getAttribute(\"data-inputId\");\n    var scale = parseInt(el.getAttribute(\"data-scale\"));\n    var options = el.getAttribute(\"data-options\");\n    options = JSON.parse(options);\n    if (!isNaN(scale)) {\n      options.height = options.height\n        ? options.height * scale\n        : node.offsetHeight * scale;\n      options.width = options.width\n        ? options.width * scale\n        : node.offsetWidth * scale;\n      if (!options.hasOwnProperty(\"style\")) {\n        options.style = {};\n      }\n      options.style.transform = \"scale(\" + scale + \")\";\n      options.style.transformOrigin = \"top left\";\n      options.style.width = node.offsetWidth + \"px\";\n      options.style.height = node.offsetHeight + \"px\";\n    }\n    htmlToImage\n      .toBlob(node, options)\n      .then(function(blob) {\n        if (fileName !== null) {\n          saveAs(blob, fileName);\n        }\n        if (inputId !== null) {\n          var reader = new FileReader();\n          reader.readAsDataURL(blob);\n          reader.onloadend = function() {\n            var base64data = reader.result;\n            Shiny.setInputValue(inputId, base64data);\n          };\n        }\n        el.classList.remove(\"disabled\");\n      })\n      .catch(function(error) {\n        console.error(\"Capture: oops, something went wrong!\", error);\n      });\n  }\n  function capureImage_(event) {\n    try {\n      capureImage(event);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  document.addEventListener(\"click\", capureImage_);\n})();\n\n"],"names":["c","a","b","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","console","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","test","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","autoBom","warn","type","Blob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","globalThis","this","Function","WOFF","JPEG","mimes","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","getMimeType","url","extension","match","exec","getExtension","toLowerCase","isDataUrl","search","makeDataUrl","content","mimeType","async","fetchAsDataURL","init","process","res","fetch","Error","blob","Promise","resolve","reject","reader","cache","resourceToDataURL","resourceUrl","contentType","options","cacheKey","includeQueryParams","key","getCacheKey","dataURL","cacheBust","Date","getTime","fetchRequestInit","headers","get","split","getContentFromDataUrl","imagePlaceholder","msg","message","uuid","counter","Math","random","toString","slice","toArray","arrayLike","arr","length","push","px","node","styleProperty","val","ownerDocument","defaultView","getComputedStyle","getPropertyValue","parseFloat","targetNode","width","leftBorder","rightBorder","clientWidth","getNodeWidth","height","topBorder","bottomBorder","clientHeight","getNodeHeight","canvasDimensionLimit","createImage","img","Image","crossOrigin","decoding","src","clonePseudoElement","nativeNode","clonedNode","pseudo","style","className","err","styleElement","appendChild","selector","cssText","formatCSSText","map","getPropertyPriority","join","formatCSSProperties","createTextNode","getPseudoElementStyle","cloneNode","isRoot","filter","then","HTMLCanvasElement","canvas","toDataURL","cloneCanvasElement","HTMLVideoElement","poster","video","cloneVideoElement","cloneSingleNode","_a","children","tagName","toUpperCase","assignedNodes","shadowRoot","childNodes","reduce","deferred","child","clonedChild","cloneChildren","Element","targetStyle","sourceStyle","transformOrigin","forEach","value","endsWith","reducedFont","floor","substring","setProperty","cloneCSSStyle","clonePseudoElements","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","cloneInputValue","HTMLSelectElement","clonedSelect","selectedOption","Array","from","find","getAttribute","cloneSelectValue","decorate","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","shouldEmbed","embedResources","baseUrl","filteredCSSText","str","preferredFontFormat","format","filterPreferredFontFormat","urls","raw","quotation","parseURLs","css","resourceURL","baseURL","getContentFromUrl","resolvedURL","protocol","doc","implementation","createHTMLDocument","base","head","resolveUrl","escaped","RegExp","toRegex","embedImages","background","cssString","embedBackground","HTMLImageElement","SVGImageElement","baseVal","srcset","embedImageNode","deferreds","all","embedChildren","cssFetchCache","fetchCSS","text","embedFonts","data","regexUrl","loadFonts","loc","startsWith","parseCSS","source","keyframesRegex","matches","importRegex","unifiedRegex","lastIndex","embedWebFonts","fontEmbedCSS","skipFonts","rules","styleSheets","cssRules","ret","sheet","item","index","CSSRule","IMPORT_RULE","importIndex","metadata","rule","insertRule","catch","inline","getCSSRules","FONT_FACE_RULE","getWebFontRules","parseWebFontRules","parentStyleSheet","styleNode","sytleContent","firstChild","insertBefore","toSvg","backgroundColor","manual","Object","keys","applyStyle","xmlns","createElementNS","foreignObject","XMLSerializer","serializeToString","encodeURIComponent","html","svgToDataURL","nodeToDataURL","toBlob","context","getContext","ratio","pixelRatio","FINAL_PROCESS","env","devicePixelRatio","parseInt","Number","isNaN","getPixelRatio","canvasWidth","canvasHeight","skipAutoScale","checkCanvasDimensions","fillStyle","fillRect","drawImage","toCanvas","quality","binaryString","atob","len","binaryArray","Uint8Array","charCodeAt","canvasToBlob","elOrParentHasClass","element","classname","classList","contains","parentNode","validateEl","capureImage","event","el","ua","indexOf","alert","add","toCapture","querySelector","fileName","inputId","scale","JSON","parse","offsetHeight","offsetWidth","hasOwnProperty","transform","base64data","Shiny","setInputValue","remove","addEventListener"],"sourceRoot":""}